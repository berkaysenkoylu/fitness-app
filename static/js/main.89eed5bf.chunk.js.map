{"version":3,"sources":["components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","containers/Authentication/Signup/Signup.module.css","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Footer/Footer.module.css","components/UI/Accordion/Accordion.module.css","components/Home/Home.js","axios-bodydata.js","components/UI/Input/Input.js","components/UI/Button/Button.js","containers/Body/BodyData/BodyData.js","components/UI/Accordion/Chevron/Chevron.js","components/UI/Accordion/Accordion.js","components/Body/BodyDataElement/BodyDataElement.js","components/Body/BodyGraphElement/BodyGraphElement.js","components/UI/Loader/Loader.js","components/Body/BodyView.js","containers/Body/Body.js","axios-exercise.js","components/Exercises/ExerciseElements/ExerciseElement/ExerciseElement.js","components/Exercises/ExerciseElements/ExerciseElements.js","axios-exerciseRoutine.js","hoc/Auxillary/Auxillary.js","components/Exercises/ExerciseElements/ExerciseFormElement/ExerciseFormElement.js","components/Exercises/ExerciseElements/ExerciseAdd/ExerciseAdd.js","containers/Exercise/AddExerciseRoutine/AddExerciseRoutine.js","components/Exercises/ExerciseView/ExerciseView.js","containers/Exercise/Exercise.js","axios-auth.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/Authentication/Login/Login.js","containers/Authentication/Signup/Signup.js","containers/Authentication/Authentication.js","containers/Authentication/Logout/Logout.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Logo/Logo.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Footer/Footer.js","hoc/Layout/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js","components/Home/Home.module.css","components/UI/Loader/Loader.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Button/Button.module.css","components/Body/BodyView.module.css","components/Exercises/ExerciseElements/ExerciseElements.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Exercises/ExerciseElements/ExerciseAdd/ExerciseAdd.module.css","components/Exercises/ExerciseElements/ExerciseFormElement/ExerciseFormElement.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","containers/Body/BodyData/BodyData.module.css","components/Body/BodyGraphElement/BodyGraphElement.module.css","components/Exercises/ExerciseElements/ExerciseElement/ExerciseElement.module.css","components/Exercises/ExerciseView/ExerciseView.module.css","containers/Authentication/Login/Login.module.css"],"names":["module","exports","Home","className","classes","HomeImage","HomeTextBox","PrimaryHeading","PrimaryHeadingMain","PrimaryHeadingSub","instance","axios","create","baseURL","input","props","inputElement","inputClasses","InputElement","validationError","isValid","touched","push","Invalid","value","elementType","join","elementConfig","onChange","changed","options","map","option","key","displayValue","Input","Label","label","ValidationError","button","Button","btnType","type","onClick","clicked","disabled","children","BodyData","state","formControls","date","placeholder","validation","required","valid","height","isNumber","weight","neck","waist","hip","gender","isFormValid","isEditMode","fetchedData","checkValidation","rules","trim","regExp","RegExp","regExpWithChars","test","onInputChangedHandler","event","inputName","updatedFormControls","updatedFormElement","target","formIsValid","Object","keys","forEach","formControl","setState","formOnSubmitHandler","preventDefault","copiedForm","bodyFatPercentage","Math","log10","parseFloat","bodyData","userId","localStorage","getItem","Date","bodyFat","floor","editedBodyData","_id","config","headers","token","axiosBodyData","put","then","response","history","catch","error","console","log","post","res","message","query","URLSearchParams","this","location","search","postId","entries","get","day","month","fetchedDate","data","getDate","getMonth","getFullYear","prevProps","resetedFormControls","resetedFormElement","formFields","form","onSubmit","Component","connect","userToken","chevron","width","xmlns","viewBox","fill","d","Accordion","accordionClasses","chevronClasses","Icon","isOpen","toggleAccordion","copiedAccClasses","copiedChevronClasses","newHeight","pop","Active","Rotate","content","current","scrollHeight","React","createRef","Title","title","Chevron","ref","style","maxHeight","ContentWrap","margin","Content","ButtonContainer","onEdit","Stretcher","onDelete","bodyDataElement","toString","onDel","onEditData","BodyGraphElement","graphs","graphType","chartData","display","text","fontSize","fontColor","legend","maintainAspectRatio","scales","xAxes","scaleLabel","labelString","time","unit","unitStepSize","displayFormats","ticks","beginAtZero","min","setDate","yAxes","yLabel","GraphElement","squareLoader","LoaderContainer","Loader","KEY_LABEL_MAP","useState","showData","setShowData","showGraph","setShowGraph","setBodyData","xAxis","yAxis","graphData","setGraphData","isLoading","setIsLoading","useEffect","fetchData","fetchedDataWithNoId","id","orderedDataByDate","sort","a","b","graphsData","dataElement","bodyfat","length","dateString","getTime","getTimezoneOffset","toISOString","split","BodyDataElement","delete","onDeleteElement","match","url","graphContent","labels","datasets","borderColor","backgroundColor","graphTitle","slice","toUpperCase","toLowerCase","Buttons","hidden","BodyView","GraphView","Body","path","component","render","ExerciseElement","onAdd","name","flex","onCancel","newExercise","setNewExercise","exercises","setAddExercise","exercisePool","setExercisePool","axiosExercise","result","initialExercises","removedExercise","copiedExercisesArr","exercisePoolContent","gridColumnStart","gridColumnEnd","exercise","minHeight","exerciseName","filter","ex","onRemoveExercise","onAddFormControl","onSendFormFields","ExerciseElements","ExerciseElementAdd","onNewExerciseInputChangedHandler","ExercisePool","auxillary","ExerciseFormElement","FormElement","setsValue","setsChanged","repsValue","repsChanged","onRemoved","RemoveButton","formData","setFormData","setIsFormValid","formSubmitted","setIsFormSubmitted","dateInput","newFormControls","exerciseFormControls","newFormData","control","sets","reps","validateForm","onInputFieldChanged","inputFieldName","copiedFormData","copiedFormControl","validateField","formCtrl","onRemovePressed","redirectLink","to","Auxillary","ExerciseForm","exerciseRoutineData","axiosExerciseRoutine","onFormSubmitHandler","DateInput","onInput","AddExerciseRoutine","getExerciseFormControls","formControlName","copiedFormControlsArr","removeExerciseHandler","removedCtrName","copiedFormControls","ctrl","prevState","setExerciseRoutineData","dateMap","exerciseGlossary","tableExerciseHeaders","tableDateHeaders","concat","Set","dailyExercise","exer","exerciseHeaders","tableData","index","Fragment","random","cursor","onDeleteDate","find","copiedArr","colSpan","subHeaders","tableContent","rowSpan","Table","Exercise","ExerciseView","logout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","loginSuccess","backdrop","show","Backdrop","Modal","nextProps","nextState","modalClosed","transform","opacity","Login","email","isEmail","password","minLength","showError","checkValidity","maxLength","isNumeric","inputChangedHandler","inputField","copiedFormControlElement","onSubmitHandler","userData","onLogin","closeErrorSection","redirect","isAuthenticated","color","LoginForm","authData","axiosAuth","expiresIn","setItem","loginFail","actions","Signup","fieldName","copiedFormElement","onSignupSubmit","isSignupSuccessful","SignupForm","loading","signupFail","Authentication","exact","Logout","onLogout","navigationItem","NavigationItem","link","activeClassName","active","notAuthRoutes","authRoutes","Dropdown","DropdownItems","NavigationItems","logo","Logo","src","fitnessLogo","alt","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","sideDrawer","attachedClassess","SideDrawer","Closed","open","Open","closed","Footer","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","App","tryToAutoLogin","routes","expirationDate","Boolean","window","hostname","updateObject","oldObject","updatedProperties","initialState","redirectPath","reducer","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","authReducer","applyMiddleware","thunk","app","basename","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89eed5bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__38MFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__110fU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignupForm\":\"Signup_SignupForm__3_JZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1Cg1D\"};","module.exports = __webpack_public_path__ + \"static/media/logo.84e6a04a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2OB1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1Xboh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__GtF7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Accordion\":\"Accordion_Accordion__3QkAH\",\"Active\":\"Accordion_Active__3xNuv\",\"Title\":\"Accordion_Title__3iESl\",\"Icon\":\"Accordion_Icon__1hvZR\",\"Rotate\":\"Accordion_Rotate__5xAvw\",\"ContentWrap\":\"Accordion_ContentWrap__3vvTX\",\"Content\":\"Accordion_Content__hBvJz\",\"ButtonContainer\":\"Accordion_ButtonContainer__3r7hM\",\"Stretcher\":\"Accordion_Stretcher__hwRyn\"};","import React from 'react';\r\n\r\nimport classes from './Home.module.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <div className={classes.HomeImage}></div>\r\n            <div className={classes.HomeTextBox}>\r\n                <h1 className={classes.PrimaryHeading}>\r\n                    <span className={classes.PrimaryHeadingMain}>FITNESS TRACKER</span>\r\n                    <span className={classes.PrimaryHeadingSub}>track your progress</span>\r\n                    <span className={classes.PrimaryHeadingSub}>improve better</span>\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://ancient-reef-11874.herokuapp.com/api/bodydata'\r\n});\r\n\r\nexport default instance;\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    let inputClasses = [classes.InputElement];\r\n    let validationError = '';\r\n\r\n    if (!props.isValid && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        if(props.value !== ''){\r\n            validationError = 'Please enter a valid value';\r\n        }\r\n        else {\r\n            validationError = 'This field is required';\r\n        }\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case 'input':\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}\r\n            />;\r\n            break;\r\n        case 'textarea':\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed}\r\n            />;\r\n            break;\r\n        case 'select':\r\n            inputElement = <select \r\n                className={inputClasses.join(' ')} \r\n                value={props.value} \r\n                onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n                </select>;\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig}\r\n                value={props.value} \r\n                onChange={props.changed}\r\n            />;\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n           <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            <p className={classes.ValidationError}>{validationError}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return (\r\n        <button\r\n            className={[classes.Button, classes[props.btnType], classes[props.type]].join(' ')}\r\n            onClick={props.clicked}\r\n            disabled={props.disabled}\r\n        >{ props.children }</button>\r\n    )\r\n}\r\n\r\nexport default button;\r\n","import React, { Component } from 'react';\r\nimport axiosBodyData from '../../../axios-bodydata';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './BodyData.module.css';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\n\r\nclass BodyData extends Component {\r\n    state = {\r\n        formControls: {\r\n            date: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'date',\r\n                    placeholder: 'Date'\r\n                },\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            height: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your height [cm]'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    isNumber: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            weight: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your weight [kg]'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    isNumber: true \r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            neck: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your neck circumference [cm]'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    isNumber: true       \r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            waist: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your waist circumference [cm]'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    isNumber: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            hip: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your hip circumference [cm]'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    isNumber: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            gender: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'male', displayValue: 'Male'},\r\n                        {value: 'female', displayValue: 'Female'}\r\n                    ]\r\n                },\r\n                validation: {},\r\n                valid: true,\r\n                touched: false,\r\n                value: 'male'\r\n            }\r\n        },\r\n        isFormValid: false,\r\n        isEditMode: false,\r\n        fetchedData: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        let postId = '';\r\n        // eslint-disable-next-line\r\n        for (let param of query.entries()){\r\n            postId = param[1];\r\n        }\r\n\r\n        if (postId !== '') {\r\n            const updatedFormControls = {\r\n                ...this.state.formControls\r\n            };\r\n            let config = {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.props.token\r\n                }\r\n            };\r\n            // Get the data that needs editing from backend\r\n            axiosBodyData.get(`/${postId}`, config).then(fetchedData => {\r\n                // Pre-populate the form fields\r\n                Object.keys(this.state.formControls).forEach(formControl => {\r\n                    if(formControl !== 'gender') {\r\n                        const updatedFormElement = {\r\n                            ...updatedFormControls[formControl]\r\n                        };\r\n                        if(formControl === 'date') {\r\n                            let fetchedDate = new Date(fetchedData.data[formControl]);\r\n                            let day, month, year, date;\r\n\r\n                            day = fetchedDate.getDate();\r\n                            if (day <10)\r\n                                day = \"0\" + day;\r\n                            month = fetchedDate.getMonth() + 1;\r\n                            if (month < 10)\r\n                                month = \"0\" + month;\r\n                            year = fetchedDate.getFullYear();\r\n                            date = year + \"-\" + month + \"-\" + day;\r\n                            updatedFormElement.value = date\r\n                        }\r\n                        else {\r\n                            updatedFormElement.value = fetchedData.data[formControl];\r\n                        }\r\n\r\n                        updatedFormElement.valid = true;\r\n                        updatedFormElement.touched = true;\r\n\r\n                        updatedFormControls[formControl] = updatedFormElement;\r\n                    }\r\n                    \r\n                });\r\n\r\n                // Update state\r\n                this.setState({\r\n                    formControls: updatedFormControls,\r\n                    isEditMode: true,\r\n                    fetchedData: fetchedData.data,\r\n                    isFormValid: true\r\n                });\r\n                \r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Reset the form\r\n        if(prevProps.location.search !== this.props.location.search){\r\n            const resetedFormControls = {\r\n                ...this.state.formControls\r\n            };\r\n            \r\n            Object.keys(this.state.formControls).forEach(formControl => {\r\n                if(formControl !== 'gender'){\r\n                    const resetedFormElement = {\r\n                        ...resetedFormControls[formControl]\r\n                    };\r\n\r\n                    resetedFormElement.value = \"\";\r\n                    resetedFormElement.valid = false;\r\n                    resetedFormElement.touched = false;\r\n\r\n                    resetedFormControls[formControl] = resetedFormElement;\r\n                }\r\n                \r\n            });\r\n\r\n            this.setState({\r\n                formControls: resetedFormControls,\r\n                isEditMode: false,\r\n                fetchedData: {},\r\n                isFormValid: false\r\n            });\r\n        }\r\n    }\r\n\r\n    checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.isNumber) {\r\n            // Test only numbers\r\n            let regExp = new RegExp(\"^[0-9]+$\");\r\n            // Test for floating digits\r\n            let regExpWithChars = new RegExp(\"^[0-9]{1,2}([,.][0-9]{1,2})?$\");\r\n            \r\n            isValid = (regExp.test(value) || regExpWithChars.test(value))  && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n    \r\n    onInputChangedHandler = (event, inputName) => {\r\n        // First, copy whole form controls\r\n        const updatedFormControls = {\r\n            ...this.state.formControls\r\n        };\r\n\r\n        // Then, copy the individual form control\r\n        const updatedFormElement = {\r\n            ...updatedFormControls[inputName]\r\n        };\r\n\r\n        // Change the desired value of copied individual form control \r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.touched = true;\r\n        if(updatedFormElement.validation !== null){\r\n            updatedFormElement.valid = this.checkValidation(event.target.value, updatedFormElement.validation);\r\n        }\r\n        \r\n        // Update the contents of the copied form controls\r\n        updatedFormControls[inputName] = updatedFormElement;\r\n\r\n        // Check the validity of the form\r\n        let formIsValid = true;\r\n        Object.keys(updatedFormControls).forEach(formControl => {\r\n            formIsValid = formIsValid && updatedFormControls[formControl].valid;\r\n        });\r\n\r\n        // Update the state by using the copied form controls object\r\n        this.setState({\r\n            formControls: updatedFormControls,\r\n            isFormValid: formIsValid\r\n        });\r\n    }\r\n\r\n    formOnSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const copiedForm = {...this.state.formControls};\r\n\r\n        let bodyFatPercentage = null;\r\n\r\n        if(this.state.formControls.gender.value === 'male'){\r\n            bodyFatPercentage = (495 / (1.0324 - 0.19077 * Math.log10(parseFloat(copiedForm.waist.value) - parseFloat(copiedForm.neck.value)) \r\n                + 0.15456 * Math.log10(parseFloat(copiedForm.height.value)))) - 450;\r\n        } \r\n        else \r\n        {\r\n            bodyFatPercentage = (495 / (1.29579 - 0.35004 * Math.log10(parseFloat(copiedForm.waist.value) + parseFloat(copiedForm.hip.value) \r\n                - parseFloat(copiedForm.neck.value)) + 0.22100 * Math.log10(parseFloat(copiedForm.height.value)))) - 450;\r\n        }\r\n  \r\n        const userId = localStorage.getItem(\"userId\");\r\n\r\n        const bodyData = {\r\n            userId: userId,\r\n            date: new Date(copiedForm.date.value),\r\n            height: parseFloat(copiedForm.height.value),\r\n            weight: parseFloat(copiedForm.weight.value),\r\n            neck: parseFloat(copiedForm.neck.value),\r\n            waist: parseFloat(copiedForm.waist.value),\r\n            hip: parseFloat(copiedForm.hip.value),\r\n            bodyFat: Math.floor(bodyFatPercentage * 100) / 100\r\n        };\r\n\r\n        if(!this.state.isEditMode) {\r\n            // Not in edit mode\r\n            let config = {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.props.token\r\n                }\r\n            };\r\n\r\n            axiosBodyData.post('', bodyData, config).then(res => {\r\n                this.props.history.push('/body');\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n        }\r\n        else {\r\n            // In edit mode\r\n            const editedBodyData = {\r\n                _id: this.state.fetchedData._id,\r\n                ...bodyData\r\n            }\r\n            let config = {\r\n                headers: {\r\n                    'Authorization':'Bearer ' + this.props.token\r\n                }\r\n            };\r\n            axiosBodyData.put('' + this.state.fetchedData._id, editedBodyData, config).then(response => {\r\n                this.props.history.push('/body');\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let formFields = Object.keys(this.state.formControls).map(formControl => {\r\n            return <Input \r\n                key={formControl}\r\n                elementType={this.state.formControls[formControl].elementType} \r\n                elementConfig={this.state.formControls[formControl].elementConfig} \r\n                value={this.state.formControls[formControl].value}\r\n                isValid={this.state.formControls[formControl].valid}\r\n                touched={this.state.formControls[formControl].touched}\r\n                changed={(event) => this.onInputChangedHandler(event, formControl)} />\r\n        });\r\n\r\n        let form = (\r\n            <form onSubmit={(event) => this.formOnSubmitHandler(event)}>\r\n                {formFields}\r\n                <Button btnType='Success' disabled={!this.state.isFormValid}>SUBMIT</Button>\r\n            </form>\r\n        )\r\n\r\n        return (\r\n            <div className={classes.BodyData}>\r\n                <h2>Enter your body values</h2>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.userToken\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(BodyData);","import React from 'react';\r\n\r\nconst chevron = (props) => {\r\n    return (\r\n        <svg\r\n            className={props.className}\r\n            height={props.height}\r\n            width={props.width}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 320 512\"\r\n        >\r\n            <path\r\n                fill={props.fill}\r\n                d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n            />\r\n        </svg>\r\n  );\r\n}\r\n\r\nexport default chevron;\r\n","import React, { Component } from 'react';\r\n\r\nimport classes from './Accordion.module.css';\r\nimport Chevron from './Chevron/Chevron';\r\nimport Button from '../Button/Button';\r\n\r\nclass Accordion extends Component {\r\n    state = {\r\n        accordionClasses: [classes.Accordion],\r\n        chevronClasses: [classes.Icon],\r\n        isOpen: false,\r\n        height: 0\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.content = React.createRef();\r\n    }\r\n\r\n    toggleAccordion = () => {\r\n        const copiedAccClasses = [...this.state.accordionClasses];\r\n        const copiedChevronClasses = [...this.state.chevronClasses];\r\n        let newHeight = 0;\r\n\r\n        if(!this.state.isOpen){\r\n            // Open accordion\r\n            copiedAccClasses.push(classes.Active);\r\n            copiedChevronClasses.push(classes.Rotate);\r\n            newHeight = this.content.current.scrollHeight;\r\n        }\r\n        else {\r\n            // Close accordion\r\n            copiedAccClasses.pop();\r\n            copiedChevronClasses.pop();\r\n            newHeight = 0;\r\n        }\r\n\r\n        this.setState({\r\n            accordionClasses: copiedAccClasses,\r\n            chevronClasses: copiedChevronClasses,\r\n            isOpen: !this.state.isOpen,\r\n            height: newHeight\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <button className={this.state.accordionClasses.join(' ')} onClick={this.toggleAccordion}>\r\n                    <p className={classes.Title}>{this.props.title}</p>\r\n                    <Chevron className={this.state.chevronClasses.join(' ')} width={10} fill={\"#fff\"} />\r\n                </button>\r\n                <div\r\n                    ref={this.content}\r\n                    style={{ maxHeight: `${this.state.height}px` }}\r\n                    className={classes.ContentWrap}\r\n                >\r\n                    <div style={{width: '80%', margin: '5px auto'}}>\r\n                        <div className={classes.Content}>\r\n                            { this.props.content }\r\n                        </div>\r\n                        <div className={classes.ButtonContainer}>\r\n                            <Button btnType='Success' type={'ContentButton'} clicked={this.props.onEdit}>Edit</Button>\r\n                            <span className={classes.Stretcher}></span>\r\n                            <Button btnType='Danger' type={'ContentButton'} clicked={this.props.onDelete}>Delete</Button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accordion;","import React from 'react';\r\n\r\nimport Accordion from '../../UI/Accordion/Accordion';\r\n\r\nconst bodyDataElement = (props) => {\r\n    const demoContent = `Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n    Nesciunt, repudiandae debitis at facilis libero quae placeat nobis odit culpa\r\n    asperiores facere, obcaecati hic porro dolore vel quibusdam. Sint, qui obcaecati!`;\r\n    \r\n    return (\r\n        <Accordion title={props.date.toString()} content={demoContent} onDelete={props.onDel} onEdit={props.onEditData} />\r\n    )\r\n}\r\n\r\nexport default bodyDataElement;\r\n","import React from 'react';\r\n\r\nimport classes from './BodyGraphElement.module.css';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst BodyGraphElement = (props) => {\r\n    let graphs = '';\r\n\r\n    switch(props.graphType) {\r\n        case 'Bar':\r\n            break;\r\n        case 'Line':\r\n            graphs = <Line \r\n                        data={props.chartData} \r\n                        options={\r\n                            {\r\n                                title: {display: true, text: props.title, fontSize: 18, fontColor: 'rgb(41, 113, 134, 1)'},\r\n                                legend: {display: false},\r\n                                maintainAspectRatio: true,\r\n                                scales: {\r\n                                    xAxes: [\r\n                                        {\r\n                                            scaleLabel: {display: true, labelString: 'Days'},\r\n                                            type: 'time',\r\n                                            time: {\r\n                                                unit: 'day',\r\n                                                unitStepSize: 1,\r\n                                                displayFormats: {\r\n                                                   'day': 'MMM DD'\r\n                                                }\r\n                                            },\r\n                                            ticks: {\r\n                                                beginAtZero: true,\r\n                                                min: new Date(new Date().setDate(new Date().getDate()-5))\r\n                                            }    \r\n                                        }\r\n                                    ],\r\n                                    yAxes: [\r\n                                        {\r\n                                            scaleLabel: {display: true, labelString: props.yLabel}\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            }\r\n                        } />\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.GraphElement}>\r\n            {graphs}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BodyGraphElement;\r\n","import React from 'react';\r\n\r\nimport classes from './Loader.module.css';\r\n\r\nconst squareLoader = (props) => {\r\n    return (\r\n        <div className={classes.LoaderContainer}>\r\n            <div style={{margin: 'auto'}}>\r\n                <div className={classes.Loader}></div>\r\n                <div className={classes.Loader}></div>\r\n                <div className={classes.Loader}></div>\r\n                <div className={classes.Loader}></div>\r\n                <div className={classes.Loader}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default squareLoader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axiosBodyData from '../../axios-bodydata';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './BodyView.module.css';\r\nimport BodyDataElement from './BodyDataElement/BodyDataElement';\r\nimport BodyGraphElement from './BodyGraphElement/BodyGraphElement';\r\nimport Button from '../UI/Button/Button';\r\nimport Loader from '../UI/Loader/Loader';\r\n\r\nconst KEY_LABEL_MAP = {\r\n    height: 'Height [cm]',\r\n    weight: 'Weight [kg]',\r\n    neck: 'Neck C. [cm]',\r\n    waist: 'Waist C. [cm]',\r\n    hip: 'Hip C. [cm]',\r\n    bodyFat: 'Body Fat %'\r\n}\r\n\r\nconst BodyView = (props) => {\r\n    const [showData, setShowData] = useState(true);\r\n    const [showGraph, setShowGraph] = useState(false);\r\n    const [bodyData, setBodyData] = useState([]);\r\n    const [graphData, setGraphData] = useState({xAxis: [], yAxis: {}});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        setIsLoading(true);\r\n\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        };\r\n\r\n        axiosBodyData.get('', config).then(res => {\r\n            const fetchedData = res.data.data.map(data => {\r\n                let {_id, ...fetchedDataWithNoId} = data;\r\n                return {\r\n                    id: data._id,\r\n                    ...fetchedDataWithNoId\r\n                };\r\n            });\r\n\r\n            const copiedData = [...fetchedData];\r\n\r\n            const orderedDataByDate = copiedData.sort((a, b) => {\r\n                return new Date(a.date) - new Date(b.date);\r\n            });\r\n            \r\n            const graphsData = {\r\n                xAxis: [],\r\n                yAxis: {\r\n                    height: [],\r\n                    weight: [],\r\n                    neck: [],\r\n                    waist: [],\r\n                    hip: [],\r\n                    bodyFat: []\r\n                }\r\n            }\r\n\r\n            orderedDataByDate.forEach(dataElement => {\r\n                graphsData.xAxis.push(dataElement.date);\r\n                graphsData.yAxis.height.push(dataElement.height);\r\n                graphsData.yAxis.weight.push(dataElement.weight);\r\n                graphsData.yAxis.neck.push(dataElement.neck);\r\n                graphsData.yAxis.waist.push(dataElement.waist);\r\n                graphsData.yAxis.hip.push(dataElement.hip);\r\n                graphsData.yAxis.bodyFat.push(dataElement.bodyfat);\r\n            });\r\n    \r\n            setBodyData(orderedDataByDate);\r\n            setGraphData(graphsData);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    const toggleSections = () => {\r\n        setShowData(showData => showData = !showData);\r\n        setShowGraph(showGraph => showGraph = !showGraph);\r\n    }\r\n\r\n    const onDeleteElement = (id) => {\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        };\r\n\r\n        axiosBodyData.delete('/' + id, config).then(res => {\r\n            fetchData();\r\n        });\r\n    }\r\n\r\n    const onEditElement = (id) => {\r\n        // Navigate to add data section with an id payload\r\n        props.history.push(props.match.url + '/add-data?key=' + id);\r\n    }\r\n\r\n    let content = <Loader />;\r\n    if(!isLoading && bodyData.length > 0) {\r\n        content = bodyData.map(data => {\r\n            const date = new Date(data.date);\r\n            const dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\r\n                    .toISOString()\r\n                    .split(\"T\")[0];\r\n            return <BodyDataElement key={data.id} date={dateString} onDel={() => onDeleteElement(data.id)} onEditData={() => onEditElement(data.id)} />\r\n        });\r\n    } else {\r\n        content = <p>No data has been entered yet!</p>;\r\n    }\r\n\r\n    let graphContent = '';\r\n    if(!isLoading && graphData !== null){\r\n        graphContent = Object.keys(graphData.yAxis).map(key => {\r\n            const data = {\r\n                labels: graphData.xAxis,\r\n                datasets: [\r\n                    {\r\n                        label: key, \r\n                        data: graphData.yAxis[key],\r\n                        fill: false,\r\n                        borderColor: 'rgba(0, 0, 0, 0.6)',\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                            'rgba(54, 162, 235, 0.6)',\r\n                            'rgba(255, 206, 86, 0.6)',\r\n                            'rgba(75, 192, 192, 0.6)',\r\n                            'rgba(153, 102, 255, 0.6)',\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n\r\n            const graphTitle = key.slice(0, 1).toUpperCase() + key.toLowerCase().slice(1, key.length);\r\n\r\n            return <BodyGraphElement key={key} graphType='Line' title={`Change in ${graphTitle}`} yLabel={KEY_LABEL_MAP[key]} chartData={data} />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.Buttons}>\r\n                <Button btnType=\"Primary\" clicked={toggleSections}>{showData ? 'Switch to Graphs' : 'Switch to Data'}</Button>\r\n            </div>\r\n            <hr />\r\n            <div hidden={!showData}>\r\n                <div className={classes.BodyView}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n            \r\n            <div hidden={!showGraph}>\r\n                <div className={classes.GraphView}>\r\n                    {graphContent}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.userToken\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(BodyView);","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport BodyData from './BodyData/BodyData';\r\nimport BodyView from '../../components/Body/BodyView';\r\n\r\nclass Body extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path={this.props.match.url + '/add-data'} component={BodyData} />\r\n                <Route path={this.props.match.url} render={() => <BodyView {...this.props} />} />;\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://ancient-reef-11874.herokuapp.com/api/exercise'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport classes from './ExerciseElement.module.css';\r\n\r\nconst ExerciseElement = (props) => {\r\n    return (\r\n        <div className={classes.ExerciseElement}>\r\n            <label onClick={props.onAdd}>{props.name}</label>\r\n            <span style={{flex: \"1 auto\"}} onClick={props.onAdd}></span>\r\n            <button onClick={props.onCancel}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExerciseElement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axiosExercise from '../../../axios-exercise';\r\nimport classes from './ExerciseElements.module.css';\r\nimport ExerciseElement from './ExerciseElement/ExerciseElement';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../..//UI/Button/Button';\r\n\r\nconst ExerciseElements = (props) => {\r\n    const [newExercise, setNewExercise] = useState({\r\n        elementType: 'input',\r\n        elementConfig: {\r\n            type: 'text',\r\n            placeholder: 'New Exercise'\r\n        },\r\n        value: ''\r\n    });\r\n\r\n    const [exercises, setAddExercise] = useState([]); // This is a showcase array (for front end)\r\n    const [exercisePool, setExercisePool] = useState([]); // For initialization and deletion (This is an array that gets populated from backend)\r\n\r\n    // TODO: At the beginning, populate the exercises array from the backend (DONE ?)\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [props.token]);\r\n\r\n    const fetchData = () => {\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        };\r\n\r\n        let fetchedData = [];\r\n        axiosExercise.get('', config).then(response => {\r\n            fetchedData = response.data.result.map(data => {\r\n                return {\r\n                    id: data._id,\r\n                    userId: data.userId,\r\n                    name: data.name\r\n                }\r\n            });\r\n\r\n            // TODO (DONE ?)\r\n            let initialExercises = [];\r\n            setExercisePool(fetchedData);\r\n            initialExercises = fetchedData.map(data => {\r\n                return data.name;\r\n            });\r\n            setAddExercise(initialExercises);\r\n        });\r\n        \r\n    }\r\n\r\n    // When a form field has been removed, re-add the exercise residing in that to the pool\r\n    useEffect(() => {\r\n        if(props.removedExercise !== null){\r\n            let copiedExercisesArr = [...exercises];\r\n\r\n            copiedExercisesArr.push(props.removedExercise);\r\n\r\n            setAddExercise(copiedExercisesArr);\r\n        }\r\n    }, [props.removedExercise]);\r\n\r\n    const onNewExerciseInputChangedHandler = (event) => {\r\n        const copiedForm = {...newExercise};\r\n        copiedForm.value = event.target.value;\r\n\r\n        setNewExercise(copiedForm);\r\n    }\r\n\r\n    const onAddExerciseHandler = () => {\r\n        let copiedExercisesArr = [...exercises];\r\n\r\n        copiedExercisesArr.push(newExercise.value);\r\n\r\n        setAddExercise(copiedExercisesArr);\r\n\r\n        // Reset the form\r\n        const copiedForm = {...newExercise};\r\n        copiedForm.value = '';\r\n        setNewExercise(copiedForm);\r\n\r\n        // http request (post)\r\n        const exercise = {\r\n            name: newExercise.value\r\n        };\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        };\r\n        axiosExercise.post('', exercise, config).then(response => {\r\n            // TODO: This is a problem\r\n            //fetchData();\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const onRemoveExercise = (exerciseName) => {\r\n        let copiedExercisesArr = [...exercises];\r\n\r\n        copiedExercisesArr = copiedExercisesArr.filter(exercise => {\r\n            return exercise !== exerciseName\r\n        });\r\n\r\n        setAddExercise(copiedExercisesArr);\r\n\r\n        // http request (delete)\r\n        // Get the id from poolInventory and send it to the backend\r\n        let id = null;\r\n        let exerciseToBeDeleted = {};\r\n        exerciseToBeDeleted = exercisePool.filter(ex => ex.name === exerciseName);\r\n        id = exerciseToBeDeleted[0].id;\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        };\r\n        axiosExercise.delete('/' + id, config).then(result => {\r\n            fetchData();\r\n        });\r\n    }\r\n\r\n    const onSendFormFields = (event, exerciseName) => {\r\n        event.preventDefault();\r\n\r\n        props.onAddFormControl(exerciseName);\r\n\r\n        // Remove the given exercise from the array\r\n        let copiedExercisesArr = [...exercises];\r\n\r\n        copiedExercisesArr = copiedExercisesArr.filter(exercise => {\r\n            return exercise !== exerciseName\r\n        });\r\n\r\n        setAddExercise(copiedExercisesArr);\r\n    }\r\n\r\n    let exercisePoolContent = null;\r\n    if (exercises.length <= 0){\r\n        exercisePoolContent = <p style={{gridColumnStart: '2', gridColumnEnd: '3'}}>You haven't added any exercises yet!</p>\r\n    } \r\n    else {\r\n        exercisePoolContent = exercises.map(exercise => {\r\n            return (<div key={exercise} style={{minHeight: \"0\"}}>\r\n                        <ExerciseElement name={exercise} onCancel={() => onRemoveExercise(exercise)} onAdd={(event) => onSendFormFields(event, exercise)} />\r\n                    </div>\r\n                )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.ExerciseElements}>\r\n            <div>\r\n                <h2>Add a new exercise to the pool</h2>\r\n                <div className={classes.ExerciseElementAdd}>\r\n                    <Input \r\n                        elementType={newExercise.elementType}\r\n                        elementConfig={newExercise.elementConfig}\r\n                        value={newExercise.value}\r\n                        changed={(event) => onNewExerciseInputChangedHandler(event)}\r\n                    />\r\n                    <Button btnType=\"Success\" type=\"ContentButton\" clicked={onAddExerciseHandler} disabled={newExercise.value.length <= 0}>ADD</Button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.ExercisePool}>\r\n                {exercisePoolContent}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.userToken\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ExerciseElements);\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://ancient-reef-11874.herokuapp.com/api/exercise-routine'\r\n});\r\n\r\nexport default instance;","const auxillary = (props) => props.children;\r\n\r\nexport default auxillary;","import React from 'react';\r\n\r\nimport classes from './ExerciseFormElement.module.css';\r\n\r\nconst ExerciseFormElement = (props) => {\r\n    return (\r\n        <div className={classes.FormElement}>\r\n            <label>{props.label}</label>\r\n            <input type=\"text\" placeholder=\"Number of Sets\" value={props.setsValue} onChange={props.setsChanged} />\r\n            <input type=\"text\" placeholder=\"Number of Repetitions\" value={props.repsValue} onChange={props.repsChanged} />\r\n            <button onClick={props.onRemoved} className={classes.RemoveButton}>REMOVE</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExerciseFormElement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axiosExerciseRoutine from '../../../../axios-exerciseRoutine';\r\n\r\nimport Auxillary from '../../../../hoc/Auxillary/Auxillary';\r\nimport Button from '../../../UI/Button/Button';\r\nimport classes from './ExerciseAdd.module.css';\r\nimport ExerciseFormElement from '../../../../components/Exercises/ExerciseElements/ExerciseFormElement/ExerciseFormElement';\r\n\r\nconst ExerciseAdd = (props) => {\r\n    const [formData, setFormData] = useState({});\r\n    const [isFormValid, setIsFormValid] = useState(false);\r\n    const [formSubmitted, setIsFormSubmitted] = useState(false);\r\n    let dateInput = React.createRef();\r\n\r\n    useEffect(() => {\r\n        const newFormControls = [...props.exerciseFormControls];\r\n\r\n        //*\r\n        const newFormData = {...formData};\r\n        newFormControls.forEach(control => {\r\n            if(!formData[control])\r\n                newFormData[control] = {sets: '', reps: ''};\r\n        });\r\n        if(newFormControls.length > 0)\r\n            validateForm(newFormData);\r\n\r\n        setFormData(newFormData);\r\n\r\n        \r\n        //*\r\n\r\n        // setFormControls(newFormControls);\r\n    }, [props.exerciseFormControls]);\r\n\r\n    // const onRemovePressed = (event, ctrName) => {\r\n    //     event.preventDefault();\r\n\r\n    //     let copiedFormCtrls = [...formControls];\r\n\r\n    //     copiedFormCtrls = copiedFormCtrls.filter(ctrl => ctrl !== ctrName);\r\n\r\n    //     setFormControls(copiedFormCtrls);\r\n\r\n    //     props.onRemoveExercise(ctrName);\r\n    // }\r\n\r\n    const onRemovePressed = (event, formControl) => {\r\n        event.preventDefault();\r\n\r\n        const copiedFormData = {...formData};\r\n\r\n        delete copiedFormData[formControl];\r\n\r\n        setFormData(copiedFormData);\r\n\r\n        props.onRemoveExercise(formControl);\r\n    }\r\n\r\n    const onInputFieldChanged = (event, formControl, inputFieldName) => {\r\n        const copiedFormData = {...formData};\r\n        const copiedFormControl = copiedFormData[formControl];\r\n\r\n        switch (inputFieldName) {\r\n            case 'sets':\r\n                copiedFormControl.sets = event.target.value;\r\n                copiedFormData[formControl] = copiedFormControl;\r\n                setFormData(copiedFormData);\r\n                break;\r\n            case 'reps':\r\n                copiedFormControl.reps = event.target.value;\r\n                copiedFormData[formControl] = copiedFormControl;\r\n                setFormData(copiedFormData);\r\n                break;\r\n            default:\r\n                console.log(\"inputFieldName doesn't exist, check your code.\");\r\n                break;\r\n        }\r\n\r\n        // setIsFormValid(isValid);\r\n        validateForm(formData);\r\n    }\r\n\r\n    const onDateChangedHandler = (event) => {\r\n        validateForm(formData);\r\n    }\r\n\r\n    //*\r\n    const validateForm = (form) => {\r\n        // Validate each field\r\n        let isValid = true;\r\n        Object.keys(form).forEach(formControl => {\r\n            isValid = isValid && (validateField(form[formControl].sets) && (validateField(form[formControl].reps)));\r\n        });\r\n\r\n        // Also check the date field\r\n        if(!dateInput.current){\r\n            isValid = false;\r\n        } else {\r\n            isValid = (dateInput.current.value.trim() !== '') && isValid;\r\n        }\r\n\r\n        // Set form valid\r\n        setIsFormValid(isValid);\r\n    }\r\n\r\n    const validateField = (value) => {\r\n        // Check if the given value is a number\r\n        let regExp = new RegExp(\"^[0-9]+$\");\r\n\r\n        return regExp.test(value);\r\n    }\r\n\r\n    const onFormSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        \r\n        const exerciseRoutineData = {\r\n            date: new Date(dateInput.current.value),\r\n            exercises: {\r\n                ...formData\r\n            }\r\n        };\r\n\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }\r\n        }\r\n        axiosExerciseRoutine.post('', exerciseRoutineData, config).then(response => {\r\n            // Redirect if successfull\r\n            setIsFormSubmitted(true);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    // let form = <p>Add exercise form fields from the pool above.</p>;\r\n    // if(formControls.length > 0) {\r\n    //     form = formControls.map(formControl => {\r\n    //         return (<div className={classes.FormFields} key={formControl}>\r\n    //                     <label>{formControl}</label>\r\n    //                     <input type=\"text\" placeholder=\"Number of Sets\" />\r\n    //                     <input type=\"text\" placeholder=\"Number of Repetitions\" />\r\n    //                     <button onClick={(event) => onRemovePressed(event, formControl)}>REMOVE</button>\r\n    //                 </div>)\r\n    //     });\r\n    // }\r\n\r\n    let formFields = <p>Add exercise form fields from the pool above.</p>;\r\n    if(Object.keys(formData).length > 0) {\r\n        formFields = Object.keys(formData).map(formCtrl => {\r\n            return (\r\n                // <div className={classes.FormFields} key={formCtrl}>\r\n                //     <label>{formCtrl}</label>\r\n                //     <input type=\"text\" placeholder=\"Number of Sets\" value={formData[formCtrl].sets} onChange={(event) => onInputFieldChanged(event, formCtrl, 'sets')} />\r\n                //     <input type=\"text\" placeholder=\"Number of Repetitions\" value={formData[formCtrl].reps} onChange={(event) => onInputFieldChanged(event, formCtrl, 'reps')} />\r\n                //     <button onClick={(event) => onRemovePressed(event, formCtrl)}>REMOVE</button>\r\n                // </div>\r\n                <ExerciseFormElement \r\n                    key={formCtrl} \r\n                    label={formCtrl} \r\n                    setsValue={formData[formCtrl].sets} \r\n                    repsValue={formData[formCtrl].reps} \r\n                    setsChanged={(event) => onInputFieldChanged(event, formCtrl, 'sets')}\r\n                    repsChanged={(event) => onInputFieldChanged(event, formCtrl, 'reps')}\r\n                    onRemoved={(event) => onRemovePressed(event, formCtrl)}\r\n                    />\r\n            )\r\n        })\r\n    }\r\n\r\n    let redirectLink = null;\r\n    if (formSubmitted){\r\n        redirectLink = <Redirect to=\"/exercise\" />;\r\n    }\r\n\r\n    return (\r\n        <Auxillary>\r\n            {redirectLink}\r\n            <h2>Exercise addition form</h2>\r\n            <div>\r\n                <form className={classes.ExerciseForm} onSubmit={(event) => onFormSubmitHandler(event)}>\r\n                    <input type=\"date\" className={classes.DateInput} ref={dateInput} onInput={(event) => onDateChangedHandler(event)} />\r\n                    {formFields}\r\n                    <Button btnType=\"Success\" disabled={!isFormValid}>Submit</Button>\r\n                    {!isFormValid ? <p>Please make sure to enter numbers in the fields!</p> : null}\r\n                </form>\r\n            </div>\r\n        </Auxillary>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.userToken\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ExerciseAdd);","import React, { Component } from 'react';\r\n\r\nimport ExerciseElements from '../../../components/Exercises/ExerciseElements/ExerciseElements';\r\nimport ExerciseAdd from '../../../components/Exercises/ExerciseElements/ExerciseAdd/ExerciseAdd';\r\n\r\nclass AddExerciseRoutine extends Component {\r\n    state = {\r\n        formControls: [],\r\n        removedExercise: null\r\n    }\r\n\r\n    getExerciseFormControls = (formControlName) => {\r\n        // A function for obtaining the exercise form controls\r\n        // from 'ExerciseElements' child component\r\n        const copiedFormControlsArr = [...this.state.formControls];\r\n\r\n        copiedFormControlsArr.push(formControlName);\r\n\r\n        this.setState({\r\n            formControls: copiedFormControlsArr\r\n        });\r\n    }\r\n\r\n    removeExerciseHandler = (removedCtrName) => {\r\n        let copiedFormControls = [...this.state.formControls];\r\n        copiedFormControls = copiedFormControls.filter(ctrl => ctrl !== removedCtrName);\r\n\r\n        this.setState({\r\n            formControls: copiedFormControls,\r\n            removedExercise: removedCtrName\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevState.removedExercise !== null)\r\n        {    this.setState({\r\n                removedExercise: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ExerciseElements onAddFormControl={this.getExerciseFormControls} removedExercise={this.state.removedExercise} />\r\n                <hr />\r\n                <ExerciseAdd exerciseFormControls={this.state.formControls} onRemoveExercise={this.removeExerciseHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddExerciseRoutine;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axiosExerciseRoutine from '../../../axios-exerciseRoutine';\r\n\r\nimport classes from './ExerciseView.module.css';\r\n\r\nconst ExerciseView = (props) => {\r\n    const [exerciseRoutineData, setExerciseRoutineData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }            \r\n        };\r\n\r\n        axiosExerciseRoutine.get('', config).then(response => {\r\n            let fetchedData = [];\r\n\r\n            fetchedData = response.data.result.map(d => {\r\n                return {\r\n                    id: d._id,\r\n                    userId: d.userId,\r\n                    date: d.date,\r\n                    exercises: d.exercises\r\n                };\r\n            });\r\n\r\n            // Sort the exercise routine data\r\n            fetchedData.sort((a, b) => (a.date > b.date) ? -1 : ((b.date > a.date) ? 1 : 0));\r\n\r\n            setExerciseRoutineData(fetchedData);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }, [props.token]);\r\n\r\n    let dateMap = {};\r\n    const exerciseGlossary = {};\r\n    let tableExerciseHeaders = [];\r\n    let tableDateHeaders = [];\r\n    if (exerciseRoutineData.length > 0) {\r\n        exerciseRoutineData.forEach(data => {\r\n            tableExerciseHeaders = tableExerciseHeaders.concat(Object.keys(data.exercises));\r\n\r\n            // Remove duplicates\r\n            tableExerciseHeaders = [...new Set(tableExerciseHeaders)];\r\n\r\n            const date = new Date(data.date);\r\n            const dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\r\n                .toISOString()\r\n                .split(\"T\")[0];\r\n            dateMap[data.date] = dateString;\r\n            tableDateHeaders.push(dateString);\r\n        });\r\n    }\r\n\r\n    tableDateHeaders.forEach(day => {\r\n        if (!exerciseGlossary[day]) {\r\n            let dailyExercise = [];\r\n            exerciseRoutineData.forEach(fetchedData => {\r\n                // const date = new Date(fetchedData.date);\r\n                // const dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\r\n                //     .toISOString()\r\n                //     .split(\"T\")[0];;\r\n                const dateString = dateMap[fetchedData.date];\r\n\r\n                if(day === dateString){\r\n                    tableExerciseHeaders.forEach(exercise => {\r\n                        const exer = {};\r\n                        if(fetchedData.exercises[exercise]) {\r\n                            exer[exercise] = fetchedData.exercises[exercise];\r\n                        } else {\r\n                            exer[exercise] = { sets: 0, reps: 0 };\r\n                        }\r\n\r\n                        dailyExercise.push(exer);\r\n                    });\r\n                }\r\n\r\n            });\r\n            exerciseGlossary[day] = dailyExercise;\r\n        }\r\n    });\r\n\r\n    let tableData = null;\r\n    let exerciseHeaders = null;\r\n    if (Object.keys(exerciseGlossary).length > 0) {\r\n        tableData = Object.keys(exerciseGlossary).map(date => {\r\n            return (\r\n                <tr key={date}>\r\n                    <th>{date}</th>\r\n                    {exerciseGlossary[date].map((exercise, index) => {\r\n                        return (\r\n                            <React.Fragment key={exercise + Math.random() * 100}>\r\n                                <td>{exercise[tableExerciseHeaders[index]].sets}</td>\r\n                                <td>{exercise[tableExerciseHeaders[index]].reps}</td>\r\n                            </React.Fragment>)\r\n                    })}\r\n                    <th style={{cursor: 'pointer'}} onClick={(event) => onDeleteDate(event, date)}>X</th>\r\n                </tr>\r\n            )\r\n            \r\n        });\r\n    };\r\n\r\n    const onDeleteDate = (event, value) => {\r\n        let date = Object.keys(dateMap).find(key => dateMap[key] === value);\r\n\r\n        // Get the id of the data to be deleted given its date value\r\n        let id = exerciseRoutineData.filter(data => data.date === date)[0].id;\r\n        \r\n        // Remove this from the array\r\n         let copiedArr = [...exerciseRoutineData];\r\n         copiedArr = copiedArr.filter(data => data.id !== id);\r\n         setExerciseRoutineData(copiedArr);\r\n\r\n        // Http request\r\n        const config = {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + props.token\r\n            }            \r\n        };\r\n        axiosExerciseRoutine.delete('/' + id, config).then(response => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    exerciseHeaders = tableExerciseHeaders.map(exercise => {\r\n        return <th colSpan=\"2\" key={exercise}>{exercise}</th>\r\n    });\r\n\r\n    let subHeaders = tableExerciseHeaders.map(exercise => {\r\n        return (\r\n            <React.Fragment key={\"Exercise_Sub_Headers\" + Math.random() * 100}>\r\n                <th key={exercise + \"sets\"}>Sets</th>\r\n                <th key={exercise + \"reps\"}>Reps</th>\r\n            </React.Fragment>\r\n        );\r\n    });\r\n\r\n    let tableContent = \"You haven't got any exercise routine history yet!\";\r\n    if (exerciseRoutineData.length > 0) {\r\n        tableContent = (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th rowSpan=\"2\">Date</th>\r\n                        {exerciseHeaders}\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        {subHeaders}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {tableData}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Exercise Routine History</h2>\r\n            <hr />\r\n            <div className={classes.Table}>\r\n                {tableContent}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.userToken\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ExerciseView);\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport AddExerciseRoutine from './AddExerciseRoutine/AddExerciseRoutine';\r\nimport ExerciseView from '../../components/Exercises/ExerciseView/ExerciseView';\r\n\r\nclass Exercise extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path={this.props.match.url + '/add-exercise'} component={AddExerciseRoutine} />\r\n                <Route path={this.props.match.url} component={ExerciseView} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Exercise;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://ancient-reef-11874.herokuapp.com/api/users'\r\n});\r\n\r\nexport default instance;\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axiosAuth from '../../axios-auth';\r\n\r\n// ========= SIGNUP RELATED ACTIONS ========= //\r\nexport const signupStart = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_START\r\n    };\r\n};\r\n\r\nexport const signupSuccess = (token) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_SUCCESS,\r\n        token: token\r\n    };\r\n}\r\n\r\nexport const signupFail = (error) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const redirectedAfterSignup = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_REDIRECTED\r\n    }\r\n}\r\n\r\nexport const signup = (userData) => {\r\n    return dispatch => {\r\n        dispatch(signupStart());\r\n\r\n        const authData = userData;\r\n\r\n        axiosAuth.post('/signup', authData).then(response => {\r\n            dispatch(signupSuccess(response.data.token));\r\n            dispatch(redirectedAfterSignup());\r\n        }).catch(error => {\r\n            dispatch(signupFail(error.response.data.message));\r\n        });\r\n    }\r\n}\r\n// ========= SIGNUP RELATED ACTIONS ========= //\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return {\r\n        type: actionTypes.LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if(token === null){\r\n            dispatch(logout());\r\n        }\r\n        else \r\n        {\r\n            const expirationDate = new Date(localStorage.getItem('expirationTime'));\r\n            if(expirationDate > new Date()){\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(loginSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            } else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// ========= LOGIN RELATED ACTIONS ========= //\r\nexport const loginStart = () => {\r\n    return {\r\n        type: actionTypes.LOGIN_START\r\n    };\r\n};\r\n\r\nexport const loginSuccess = (token, id) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        userId: id,\r\n        token: token\r\n    };\r\n};\r\n\r\nexport const loginFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOGIN_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const login = (userData) => {\r\n    return dispatch => {\r\n        dispatch(loginStart());\r\n\r\n        const authData = userData;\r\n\r\n        axiosAuth.post('/login', authData).then(response => {\r\n            const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n\r\n            localStorage.setItem(\"userId\", response.data.userId);\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n            dispatch(loginSuccess(response.data.token, response.data.userId));\r\n            dispatch(checkAuthTimeout(+response.data.expiresIn));\r\n        }).catch(error => {\r\n            dispatch(loginFail(error.response.data.message));\r\n        });\r\n    }\r\n}\r\n\r\n// ========= LOGIN RELATED ACTIONS ========= //\r\n","export const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_REDIRECTED = 'SIGNUP_REDIRECTED';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const LOGOUT = 'LOGOUT';","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null;\r\n}\r\n\r\nexport default backdrop;\r\n","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Auxillary from '../../../hoc/Auxillary/Auxillary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    // For this component to update, either show property or children property should change\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.props.show !== nextProps.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxillary>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    { this.props.children }\r\n                </div>\r\n            </Auxillary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\nimport classes from './Login.module.css';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Modal from '../../../components/UI/Modal/Modal';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        formControls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'E-mail'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            }\r\n        },\r\n        isFormValid: false,\r\n        showError: true\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputField) => {\r\n        const copiedFormControls = {\r\n            ...this.state.formControls\r\n        };\r\n\r\n        const copiedFormControlElement = {\r\n            ...copiedFormControls[inputField]\r\n        };\r\n\r\n        copiedFormControlElement.value = event.target.value;\r\n        copiedFormControlElement.valid = this.checkValidity(event.target.value, copiedFormControlElement.validation);\r\n        copiedFormControlElement.touched = true;\r\n\r\n        copiedFormControls[inputField] = copiedFormControlElement;\r\n\r\n        // Check the validity of the form\r\n        let isValid = true;\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            isValid = isValid && copiedFormControls[formControl].valid;\r\n        });\r\n\r\n        this.setState({\r\n            formControls: copiedFormControls,\r\n            isFormValid: isValid\r\n        });\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value\r\n        };\r\n\r\n        this.props.onLogin(userData);\r\n\r\n        this.setState({\r\n            showError: true\r\n        });\r\n    }\r\n\r\n    closeErrorSection = () => {\r\n        this.setState({\r\n            showError: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let formFields = Object.keys(this.state.formControls).map(formControl => {\r\n            return <Input\r\n                key={formControl}\r\n                elementType={this.state.formControls[formControl].elementType}\r\n                elementConfig={this.state.formControls[formControl].elementConfig}\r\n                value={this.state.formControls[formControl].value}\r\n                touched={this.state.formControls[formControl].touched}\r\n                isValid={this.state.formControls[formControl].valid}\r\n                changed={(event) => this.inputChangedHandler(event, formControl)}\r\n                 />\r\n        })\r\n\r\n        let form = (\r\n            <form onSubmit={(event) => this.onSubmitHandler(event)}>\r\n                {formFields}\r\n                <Button btnType=\"Primary\" disabled={!this.state.isFormValid}>LOGIN</Button>\r\n            </form>\r\n        );\r\n\r\n        let redirect = null;\r\n        if(this.props.isAuthenticated){\r\n            redirect = <Redirect to='/' />\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Modal show={this.props.error !== null && this.state.showError} modalClosed={this.closeErrorSection}>\r\n                    {this.props.error}\r\n                </Modal>\r\n                <div>\r\n                    <h2 style={{color: '#0044ff'}}>LOGIN</h2>\r\n                    <div className={classes.LoginForm}>\r\n                        {form}\r\n                    </div>\r\n                    {redirect}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.userToken !== null,\r\n        error: state.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogin: (userData) => {dispatch(actions.login(userData))}\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nimport classes from './Signup.module.css';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Modal from '../../../components/UI/Modal/Modal';\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        formControls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'E-mail'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                value: ''\r\n            }\r\n        },\r\n        isFormValid: false,\r\n        showError: true\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onInputChangedHandler = (event, fieldName) => {\r\n        // Copy the upper most element first\r\n        const copiedFormControls = {\r\n            ...this.state.formControls\r\n        };\r\n        // Then copy the one which is beneath the upper most element\r\n        const copiedFormElement = {\r\n            ...copiedFormControls[fieldName]\r\n        };\r\n\r\n        // Change the values that need changing\r\n        copiedFormElement.value = event.target.value;\r\n        copiedFormElement.touched = true;\r\n        copiedFormElement.valid = this.checkValidity(event.target.value, copiedFormElement.validation);\r\n\r\n        // Update the copied form controls\r\n        copiedFormControls[fieldName] = copiedFormElement;\r\n\r\n        // Check if the whole form is valid\r\n        let isValid = true;\r\n        Object.keys(copiedFormControls).forEach(formControl => {\r\n            isValid = isValid && copiedFormControls[formControl].valid\r\n        });\r\n\r\n        // Update the state\r\n        this.setState({\r\n            formControls: copiedFormControls,\r\n            isFormValid: isValid\r\n        });\r\n    }\r\n    \r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value\r\n        };\r\n\r\n        // Dispatch an action\r\n        this.props.onSignupSubmit(userData);\r\n\r\n        this.setState({\r\n            showError: true\r\n        });\r\n    }\r\n\r\n    closeErrorSection = () => {\r\n        this.setState({\r\n            showError: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let formFields = Object.keys(this.state.formControls).map(formControl => {\r\n            return <Input\r\n                key={formControl}\r\n                elementType={this.state.formControls[formControl].elementType}\r\n                elementConfig={this.state.formControls[formControl].elementConfig}\r\n                value={this.state.formControls[formControl].value}\r\n                isValid={this.state.formControls[formControl].valid}\r\n                touched={this.state.formControls[formControl].touched}\r\n                changed={(event) => this.onInputChangedHandler(event, formControl)} />\r\n        });\r\n\r\n        let form = (\r\n            <form onSubmit={(event) => this.onSubmitHandler(event)}>\r\n                {formFields}\r\n                <Button btnType=\"Primary\" disabled={!this.state.isFormValid}>SIGNUP</Button>\r\n            </form>\r\n        )\r\n\r\n        let redirect = null;\r\n        if(this.props.isSignupSuccessful) {\r\n            redirect = <Redirect to=\"/\" />\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Modal show={this.props.error && this.state.showError} modalClosed={this.closeErrorSection}>\r\n                    {this.props.error}\r\n                </Modal>\r\n                <h2 style={{color: '#0044ff'}}>SIGN UP</h2>\r\n                <div className={classes.SignupForm}>\r\n                    {form}\r\n                </div>\r\n                {redirect}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.loading,\r\n        isSignupSuccessful: state.userToken !== null ? true : false,\r\n        error: state.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSignupSubmit: (userData) => {dispatch(actions.signup(userData))}\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Login from './Login/Login';\r\nimport Signup from './Signup/Signup';\r\n\r\nclass Authentication extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path={this.props.match.url + \"/login\"} component={Login} />\r\n                    <Route path={this.props.match.url + \"/signup\"} exact component={Signup} />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Authentication;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => {dispatch(actions.logout())}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink \r\n                to={props.link}\r\n                activeClassName={classes.active} exact={props.exact}>{props.children}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport Auxillary from '../../../hoc/Auxillary/Auxillary';\r\n\r\nconst navigationItems = (props) => {\r\n    let notAuthRoutes = (\r\n        <Auxillary>\r\n            <NavigationItem link=\"/auth/signup\" exact>Signup</NavigationItem>\r\n            <NavigationItem link=\"/auth/login\" exact>Login</NavigationItem>\r\n        </Auxillary>\r\n    );\r\n    \r\n    let authRoutes = (\r\n        <Auxillary>\r\n            <span className={classes.Dropdown}>\r\n                <NavigationItem link=\"#\">Body <i className=\"fa fa-angle-down\"></i></NavigationItem>\r\n                <div className={classes.DropdownItems}>\r\n                    <NavigationItem link=\"/body\" exact>View</NavigationItem>\r\n                    <NavigationItem link=\"/body/add-data\" exact>Add data</NavigationItem>\r\n                </div>\r\n            </span>\r\n            <span className={classes.Dropdown}>\r\n                <NavigationItem link=\"#\">Exercise <i className=\"fa fa-angle-down\"></i></NavigationItem>\r\n                <div className={classes.DropdownItems}>\r\n                    <NavigationItem link=\"/exercise\" exact>View</NavigationItem>\r\n                    <NavigationItem link=\"/exercise/add-exercise\" exact>Add exercise</NavigationItem>\r\n                </div>\r\n            </span>\r\n            <NavigationItem link=\"/logout\" exact>Logout</NavigationItem>\r\n        </Auxillary>\r\n    );\r\n\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link=\"/\" exact>Home</NavigationItem>\r\n            {!props.isAuthenticated ? notAuthRoutes : null}\r\n            {props.isAuthenticated ? authRoutes : null}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.userToken !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(navigationItems);","import React from 'react';\r\n\r\nimport fitnessLogo from '../../assets/images/logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={classes.Logo} style={{height: props.height}}>\r\n            <img src={fitnessLogo} alt=\"logo\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;\r\n","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}> \r\n            <DrawerToggle clicked={props.drawerToggleClicked} />\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\n\r\nimport classes from './SideDrawer.module.css';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport Auxillary from '../../../hoc/Auxillary/Auxillary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClassess = [classes.SideDrawer, classes.Closed];\r\n    if(props.open) {\r\n        attachedClassess = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Auxillary>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClassess.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Auxillary>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;\r\n","import React from 'react';\r\n\r\nimport classes from './Footer.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={classes.Footer}>\r\n            <p>&copy; 2019 | Mr. Senkoylu</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport Auxillary from '../Auxillary/Auxillary';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer: false\r\n        });\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxillary>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n                <footer>\r\n                    <Footer />\r\n                </footer>\r\n            </Auxillary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport Home from './components/Home/Home';\nimport Body from './containers/Body/Body';\nimport Exercise from './containers/Exercise/Exercise'\nimport Authentication from './containers/Authentication/Authentication';\nimport Logout from './containers/Authentication/Logout/Logout';\nimport Layout from './hoc/Layout/Layout';\n\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.tryToAutoLogin();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Authentication} />\n        <Route path='/' exact component={Home} />\n        <Redirect to='/' />\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/logout' component={Logout} />\n          <Route path='/auth' component={Authentication} />\n          <Route path='/exercise' component ={Exercise} />\n          <Route path='/body' component={Body} />\n          <Route path='/' exact component={Home} />\n          <Redirect to='/' />\n        </Switch>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.userToken !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tryToAutoLogin: () => {dispatch(actions.authCheckState())}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    userToken: null,\r\n    error: null,\r\n    loading: null,\r\n    redirectPath: ''\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.SIGNUP_START:\r\n            return updateObject(state, { error: null, loading: true });\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return updateObject(state, { userToken: action.token, error: null, loading: false });\r\n        case actionTypes.SIGNUP_FAIL:\r\n            return updateObject(state, { error: action.error, loading: false });\r\n        case actionTypes.SIGNUP_REDIRECTED:\r\n            return updateObject(state, { userId: null, userToken: null, error: null, loading: false });\r\n        case actionTypes.LOGIN_START:\r\n            return updateObject(state, { userId: null, userToken: null, error: null, loading: true });\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return updateObject(state, { userId: action.userId, userToken: action.token, error: null, loading: false });\r\n        case actionTypes.LOGIN_FAIL:\r\n            return updateObject(state, { error: action.error, loading: false });\r\n        case actionTypes.LOGOUT:\r\n            return updateObject(state, { userId: null, userToken: null });\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Redux related\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(authReducer, composeEnhancer(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename=\"fitness-app\">\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeImage\":\"Home_HomeImage__39e-D\",\"HomeTextBox\":\"Home_HomeTextBox__rBt68\",\"PrimaryHeading\":\"Home_PrimaryHeading__2uJ-v\",\"PrimaryHeadingMain\":\"Home_PrimaryHeadingMain__3Inqt\",\"moveInRight\":\"Home_moveInRight__1B-Qp\",\"PrimaryHeadingSub\":\"Home_PrimaryHeadingSub__3__LO\",\"moveInLeft\":\"Home_moveInLeft__3YfMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1XkMf\",\"slide\":\"Loader_slide__3jpKT\",\"LoaderContainer\":\"Loader_LoaderContainer__1MZ_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3noPr\",\"Label\":\"Input_Label__3pcbA\",\"InputElement\":\"Input_InputElement__vp9_5\",\"Invalid\":\"Input_Invalid__2BNYU\",\"ValidationError\":\"Input_ValidationError__1niNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1jtFB\",\"Dropdown\":\"NavigationItems_Dropdown__2pa8W\",\"DropdownItems\":\"NavigationItems_DropdownItems__3cxLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2KD4p\",\"Open\":\"SideDrawer_Open__vjIh_\",\"Closed\":\"SideDrawer_Closed__sAxYg\",\"Logo\":\"SideDrawer_Logo__1kh1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3kqGV\",\"Success\":\"Button_Success__2DH8P\",\"Danger\":\"Button_Danger__N3uOu\",\"Primary\":\"Button_Primary__23khe\",\"ContentButton\":\"Button_ContentButton__Puonx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BodyView\":\"BodyView_BodyView__3vcMu\",\"Buttons\":\"BodyView_Buttons__HJOQ6\",\"GraphView\":\"BodyView_GraphView__mtRNH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ExerciseElements\":\"ExerciseElements_ExerciseElements__1Azaa\",\"ExercisePool\":\"ExerciseElements_ExercisePool__1zUkT\",\"ExerciseElementAdd\":\"ExerciseElements_ExerciseElementAdd__j0rRz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3OpVz\",\"Logo\":\"Toolbar_Logo__2TMVz\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1aSRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ExerciseForm\":\"ExerciseAdd_ExerciseForm__JBclj\",\"DateInput\":\"ExerciseAdd_DateInput__3xCjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormElement\":\"ExerciseFormElement_FormElement__37J_5\",\"RemoveButton\":\"ExerciseFormElement_RemoveButton__1cPQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__w-S0h\",\"active\":\"NavigationItem_active__1Rfts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BodyData\":\"BodyData_BodyData__2akTb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GraphElement\":\"BodyGraphElement_GraphElement__19x5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ExerciseElement\":\"ExerciseElement_ExerciseElement__K57bL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"ExerciseView_Table__1PsKa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__2Dz2D\"};"],"sourceRoot":""}